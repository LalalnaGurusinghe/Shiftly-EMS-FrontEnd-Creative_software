{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/Desktop/Shiftly-EMS-FrontEnd-Creative_software/FrontEnd/ems-frontend/src/app/page.js"],"sourcesContent":["import { ChevronDownIcon } from \"@heroicons/react/16/solid\";\r\nimport { CheckIcon } from \"@heroicons/react/20/solid\";\r\nimport {\r\n  Listbox,\r\n  ListboxButton,\r\n  ListboxOption,\r\n  ListboxOptions,\r\n} from \"@headlessui/react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useState } from \"react\";\r\n\r\nconst vacancyOptions = [\r\n  { id: 1, name: \"Software Engineer\" },\r\n  { id: 2, name: \"HR\" },\r\n];\r\n\r\nexport default function App() {\r\n  return (\r\n    <Formik\r\n      initialValues={{ vacancy: \"\" }} // Empty string as default\r\n      validate={(values) => {\r\n        const errors = {};\r\n        if (!values.vacancy) {\r\n          errors.vacancy = \"Select a vacancy\";\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values) => {\r\n        alert(JSON.stringify(values, null, 2));\r\n      }}\r\n    >\r\n      {({ errors, touched, setFieldValue, setTouched, values }) => (\r\n        <Form>\r\n          <div className=\"grid grid-cols-1 gap-x-6 gap-y-5 sm:grid-cols-6\">\r\n            <div className=\"sm:col-span-full\">\r\n              <div className=\"relative\">\r\n                {/* Label */}\r\n                <label htmlFor=\"vacancy\" className=\"block text-sm font-medium text-gray-900\">\r\n                  Select a Vacancy\r\n                </label>\r\n\r\n                <Listbox\r\n                  value={values.vacancy}\r\n                  onChange={(selectedOption) => {\r\n                    setFieldValue(\"vacancy\", selectedOption.name); // Store only the name\r\n                    setTouched({ vacancy: true }, false); // Mark as touched\r\n                  }}\r\n                >\r\n                  <div className=\"relative mt-2\">\r\n                    <ListboxButton\r\n                      id=\"vacancy\"\r\n                      onBlur={() => {\r\n                        setTouched({ vacancy: true }, true); // Ensure touched updates\r\n                      }}\r\n                      className={`grid w-full cursor-default grid-cols-1 rounded-md bg-white py-1.5 pr-2 pl-3 text-left outline-1 outline-gray-300 focus:outline-2 focus:outline-gray-600 sm:text-sm ${\r\n                        errors.vacancy && touched.vacancy ? \"border-red-500 text-red-500\" : \"text-gray-900\"\r\n                      }`}\r\n                    >\r\n                      <span className=\"col-start-1 row-start-1 flex items-center gap-3 pr-6\">\r\n                        <span className={`block truncate ${!values.vacancy ? \"text-gray-400\" : \"\"}`}>\r\n                          {values.vacancy || \"Select a vacancy\"}\r\n                        </span>\r\n                      </span>\r\n                      <ChevronDownIcon\r\n                        aria-hidden=\"true\"\r\n                        className=\"col-start-1 row-start-1 size-5 self-center justify-self-end text-gray-500 sm:size-4\"\r\n                      />\r\n                    </ListboxButton>\r\n\r\n                    <ListboxOptions className=\"absolute z-10 mt-1 max-h-56 w-full overflow-auto rounded-md bg-white py-1 text-base ring-1 shadow-lg ring-black/5 focus:outline-hidden sm:text-sm\">\r\n                      {vacancyOptions.map((option) => (\r\n                        <ListboxOption\r\n                          key={option.id}\r\n                          value={option}\r\n                          className=\"group relative cursor-default py-2 pr-9 pl-3 text-gray-900 select-none data-focus:bg-gray-400 data-focus:text-white\"\r\n                        >\r\n                          <div className=\"flex items-center\">\r\n                            <span className=\"ml-3 block truncate font-normal group-data-selected:font-semibold\">\r\n                              {option.name}\r\n                            </span>\r\n                          </div>\r\n                          <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-gray-600 group-not-data-selected:hidden group-data-focus:text-white\">\r\n                            <CheckIcon aria-hidden=\"true\" className=\"size-5\" />\r\n                          </span>\r\n                        </ListboxOption>\r\n                      ))}\r\n                    </ListboxOptions>\r\n                  </div>\r\n                </Listbox>\r\n\r\n                {/* Error Message */}\r\n                {errors.vacancy && touched.vacancy && (\r\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.vacancy}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <div className=\"sm:col-span-full\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"inline-flex w-full justify-center rounded-md px-3 py-2 text-sm font-semibold shadow-xs bg-gray-900 text-white hover:bg-gray-700 sm:w-auto\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAMA;AACA;;;;;;;AAEA,MAAM,iBAAiB;IACrB;QAAE,IAAI;QAAG,MAAM;IAAoB;IACnC;QAAE,IAAI;QAAG,MAAM;IAAK;CACrB;AAEc,SAAS;IACtB,qBACE,oOAAC,+IAAA,CAAA,SAAM;QACL,eAAe;YAAE,SAAS;QAAG;QAC7B,UAAU,CAAC;YACT,MAAM,SAAS,CAAC;YAChB,IAAI,CAAC,OAAO,OAAO,EAAE;gBACnB,OAAO,OAAO,GAAG;YACnB;YACA,OAAO;QACT;QACA,UAAU,CAAC;YACT,MAAM,KAAK,SAAS,CAAC,QAAQ,MAAM;QACrC;kBAEC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,iBACtD,oOAAC,+IAAA,CAAA,OAAI;0BACH,cAAA,qOAAC;oBAAI,WAAU;;sCACb,oOAAC;4BAAI,WAAU;sCACb,cAAA,qOAAC;gCAAI,WAAU;;kDAEb,oOAAC;wCAAM,SAAQ;wCAAU,WAAU;kDAA0C;;kDAI7E,oOAAC,mLAAA,CAAA,UAAO;wCACN,OAAO,OAAO,OAAO;wCACrB,UAAU,CAAC;4CACT,cAAc,WAAW,eAAe,IAAI,GAAG,sBAAsB;4CACrE,WAAW;gDAAE,SAAS;4CAAK,GAAG,QAAQ,kBAAkB;wCAC1D;kDAEA,cAAA,qOAAC;4CAAI,WAAU;;8DACb,qOAAC,mLAAA,CAAA,gBAAa;oDACZ,IAAG;oDACH,QAAQ;wDACN,WAAW;4DAAE,SAAS;wDAAK,GAAG,OAAO,yBAAyB;oDAChE;oDACA,WAAW,CAAC,mKAAmK,EAC7K,OAAO,OAAO,IAAI,QAAQ,OAAO,GAAG,gCAAgC,iBACpE;;sEAEF,oOAAC;4DAAK,WAAU;sEACd,cAAA,oOAAC;gEAAK,WAAW,CAAC,eAAe,EAAE,CAAC,OAAO,OAAO,GAAG,kBAAkB,IAAI;0EACxE,OAAO,OAAO,IAAI;;;sEAGvB,oOAAC,2NAAA,CAAA,kBAAe;4DACd,eAAY;4DACZ,WAAU;;;;8DAId,oOAAC,mLAAA,CAAA,iBAAc;oDAAC,WAAU;8DACvB,eAAe,GAAG,CAAC,CAAC,uBACnB,qOAAC,mLAAA,CAAA,gBAAa;4DAEZ,OAAO;4DACP,WAAU;;8EAEV,oOAAC;oEAAI,WAAU;8EACb,cAAA,oOAAC;wEAAK,WAAU;kFACb,OAAO,IAAI;;;8EAGhB,oOAAC;oEAAK,WAAU;8EACd,cAAA,oOAAC,+MAAA,CAAA,YAAS;wEAAC,eAAY;wEAAO,WAAU;;;;2DAVrC,OAAO,EAAE;;;;;oCAmBvB,OAAO,OAAO,IAAI,QAAQ,OAAO,kBAChC,oOAAC;wCAAE,WAAU;kDAA6B,OAAO,OAAO;;;;;sCAM9D,oOAAC;4BAAI,WAAU;sCACb,cAAA,oOAAC;gCACC,MAAK;gCACL,WAAU;0CACX;;;;;;;AASf","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}